import React from 'react';
import { motion } from 'framer-motion';
import ContentCard from '../components/Content/ContentCard';
import QuoteBox from '../components/Content/QuoteBox';
import Timeline from '../components/Content/Timeline';
import Quiz from '../components/Interactive/Quiz';
import NoteTaking from '../components/Interactive/NoteTaking';
import MainContentSidebar from '../components/Layout/MainContentSidebar';
import { contentData } from '../data/content';
import { quizData } from '../data/quiz';
import { FiShield, FiUsers, FiBookOpen, FiTarget, FiCheckCircle } from 'react-icons/fi';

const SocialismReligion = () => {
  const data = contentData.tonGiaoTrongXHCN;

  // Filter quiz questions related to socialism and religion
  const socialismQuiz = quizData.filter(q =>
    q.question.includes('x√£ h·ªôi ch·ªß nghƒ©a') ||
    q.question.includes('CNXH') ||
    q.question.includes('th·ªùi k·ª≥ qu√° ƒë·ªô')
  );

  const policyTimeline = [
    {
      title: "Kh√¥ng d√πng b·∫°o l·ª±c",
      description: "Tuy·ªát ƒë·ªëi kh√¥ng s·ª≠ d·ª•ng b·∫°o l·ª±c ƒë·ªÉ x√≥a b·ªè t√¥n gi√°o",
      date: "Nguy√™n t·∫Øc c∆° b·∫£n",
      completed: true,
      details: [
        "T√¥n tr·ªçng quy·ªÅn t·ª± do t√≠n ng∆∞·ª°ng",
        "Kh√¥ng c∆∞·ª°ng √©p ng∆∞·ªùi d√¢n t·ª´ b·ªè t√¥n gi√°o",
        "Gi·∫£i quy·∫øt b·∫±ng gi√°o d·ª•c v√† thuy·∫øt ph·ª•c"
      ],
      tags: ["T·ª± do", "Nh√¢n quy·ªÅn"]
    },
    {
      title: "T√¥n tr·ªçng quy·ªÅn t·ª± do",
      description: "ƒê·∫£m b·∫£o quy·ªÅn t·ª± do t√≠n ng∆∞·ª°ng v√† kh√¥ng t√≠n ng∆∞·ª°ng",
      date: "Quy·ªÅn c∆° b·∫£n",
      completed: true,
      details: [
        "M·ªçi ng∆∞·ªùi c√≥ quy·ªÅn theo ho·∫∑c kh√¥ng theo t√¥n gi√°o",
        "Kh√¥ng ph√¢n bi·ªát ƒë·ªëi x·ª≠ v√¨ l√Ω do t√¥n gi√°o",
        "B·∫£o v·ªá quy·ªÅn l·ª£i h·ª£p ph√°p c·ªßa t√≠n ƒë·ªì"
      ],
      tags: ["T·ª± do", "B√¨nh ƒë·∫≥ng"]
    },
    {
      title: "X√¢y d·ª±ng c∆° s·ªü x√£ h·ªôi",
      description: "Ph√°t tri·ªÉn kinh t·∫ø, vƒÉn h√≥a, gi√°o d·ª•c ƒë·ªÉ gi·∫£m nhu c·∫ßu t√¥n gi√°o",
      date: "Bi·ªán ph√°p t√≠ch c·ª±c",
      completed: false,
      details: [
        "N√¢ng cao ƒë·ªùi s·ªëng v·∫≠t ch·∫•t v√† tinh th·∫ßn",
        "Ph√°t tri·ªÉn khoa h·ªçc v√† gi√°o d·ª•c",
        "X√¢y d·ª±ng x√£ h·ªôi c√¥ng b·∫±ng, b√¨nh ƒë·∫≥ng"
      ],
      tags: ["Ph√°t tri·ªÉn", "Khoa h·ªçc"]
    },
    {
      title: "ƒêo√†n k·∫øt to√†n d√¢n",
      description: "ƒêo√†n k·∫øt ƒë·ªìng b√†o c√≥ ƒë·∫°o v√† kh√¥ng c√≥ ƒë·∫°o",
      date: "M·ª•c ti√™u cu·ªëi c√πng",
      completed: false,
      details: [
        "C√πng tham gia x√¢y d·ª±ng CNXH",
        "Ph√°t huy s·ª©c m·∫°nh ƒëo√†n k·∫øt d√¢n t·ªôc",
        "T·∫°o s·ª± ƒë·ªìng thu·∫≠n trong x√£ h·ªôi"
      ],
      tags: ["ƒêo√†n k·∫øt", "X√¢y d·ª±ng"]
    }
  ];

  const implementationMethods = [
    {
      method: "Gi√°o d·ª•c v√† tuy√™n truy·ªÅn",
      description: "N√¢ng cao nh·∫≠n th·ª©c khoa h·ªçc, gi·∫£m m√™ t√≠n d·ªã ƒëoan",
      examples: [
        "Tuy√™n truy·ªÅn v·ªÅ khoa h·ªçc t·ª± nhi√™n v√† x√£ h·ªôi",
        "Gi√°o d·ª•c t∆∞ duy ph√™ ph√°n v√† logic",
        "Ph·ªï bi·∫øn ki·∫øn th·ª©c v·ªÅ quy lu·∫≠t t·ª± nhi√™n"
      ],
      icon: FiBookOpen,
      color: "bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300"
    },
    {
      method: "Ph√°t tri·ªÉn kinh t·∫ø - x√£ h·ªôi",
      description: "C·∫£i thi·ªán ƒë·ªùi s·ªëng nh√¢n d√¢n, gi·∫£m b·∫•t c√¥ng x√£ h·ªôi",
      examples: [
        "X√≥a ƒë√≥i gi·∫£m ngh√®o, t·∫°o vi·ªác l√†m",
        "Ph√°t tri·ªÉn y t·∫ø, gi√°o d·ª•c, vƒÉn h√≥a",
        "ƒê·∫£m b·∫£o c√¥ng b·∫±ng x√£ h·ªôi"
      ],
      icon: FiTarget,
      color: "bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300"
    },
    {
      method: "X√¢y d·ª±ng vƒÉn h√≥a m·ªõi",
      description: "T·∫°o ra nh·ªØng gi√° tr·ªã vƒÉn h√≥a ti·∫øn b·ªô thay th·∫ø t√¥n gi√°o",
      examples: [
        "Ph√°t tri·ªÉn ngh·ªá thu·∫≠t, th·ªÉ thao, gi·∫£i tr√≠",
        "X√¢y d·ª±ng c·ªông ƒë·ªìng ƒëo√†n k·∫øt, t∆∞∆°ng tr·ª£",
        "T·∫°o ra √Ω nghƒ©a cu·ªôc s·ªëng m·ªõi"
      ],
      icon: FiUsers,
      color: "bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300"
    },
    {
      method: "Qu·∫£n l√Ω v√† ki·ªÉm so√°t",
      description: "NgƒÉn ch·∫∑n l·ª£i d·ª•ng t√¥n gi√°o, ƒë·∫£m b·∫£o ·ªïn ƒë·ªãnh x√£ h·ªôi",
      examples: [
        "Ki·ªÉm so√°t ho·∫°t ƒë·ªông t√¥n gi√°o h·ª£p ph√°p",
        "NgƒÉn ch·∫∑n c√°c ho·∫°t ƒë·ªông ph·∫£n ƒë·ªông",
        "X·ª≠ l√Ω nghi√™m c√°c h√†nh vi vi ph·∫°m ph√°p lu·∫≠t"
      ],
      icon: FiShield,
      color: "bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300"
    }
  ];

  const challenges = [
    {
      challenge: "T√≠nh b·ªÅn v·ªØng c·ªßa √Ω th·ª©c t√¥n gi√°o",
      description: "√ù th·ª©c t√¥n gi√°o thay ƒë·ªïi ch·∫≠m h∆°n t·ªìn t·∫°i x√£ h·ªôi",
      solution: "C·∫ßn th·ªùi gian d√†i v√† ki√™n tr√¨ trong gi√°o d·ª•c"
    },
    {
      challenge: "S·ª± ƒëa d·∫°ng c·ªßa t√¥n gi√°o",
      description: "M·ªói t√¥n gi√°o c√≥ ƒë·∫∑c ƒëi·ªÉm v√† nhu c·∫ßu kh√°c nhau",
      solution: "C·∫ßn c√≥ ch√≠nh s√°ch linh ho·∫°t, ph√π h·ª£p t·ª´ng t√¥n gi√°o"
    },
    {
      challenge: "√Åp l·ª±c t·ª´ b√™n ngo√†i",
      description: "C√°c th·∫ø l·ª±c th√π ƒë·ªãch l·ª£i d·ª•ng t√¥n gi√°o ch·ªëng ph√°",
      solution: "TƒÉng c∆∞·ªùng c·∫£nh gi√°c v√† ƒë·∫•u tranh ch√≠nh tr·ªã"
    },
    {
      challenge: "C√¢n b·∫±ng gi·ªØa t·ª± do v√† qu·∫£n l√Ω",
      description: "V·ª´a ƒë·∫£m b·∫£o t·ª± do t√≠n ng∆∞·ª°ng v·ª´a qu·∫£n l√Ω ch·∫∑t ch·∫Ω",
      solution: "X√¢y d·ª±ng khung ph√°p l√Ω ho√†n thi·ªán v√† minh b·∫°ch"
    }
  ];

  return (
    <div className="min-h-screen flex">
      {/* Fixed Sidebar */}
      <div className="hidden lg:block w-80 bg-white dark:bg-gray-800 shadow-lg fixed left-0 top-0 h-screen overflow-y-auto z-10">
        <div className="p-6 pb-20">
          <MainContentSidebar
            title="N·ªôi dung ch∆∞∆°ng"
            showProgress={false}
            showStats={false}
          />
        </div>
      </div>

      {/* Main Content Area */}
      <div className="flex-1 lg:ml-80">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          {/* Header */}
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center mb-12"
          >
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
              {data.title}
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
              {data.definition}
            </p>
          </motion.div>

          {/* Main Content */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="mb-16"
          >
            <ContentCard
              title="T·∫°i sao t√¥n gi√°o v·∫´n t·ªìn t·∫°i trong XHCN?"
              icon="ü§î"
              pageId="socialism-why-exists"
              image={data.image}
              imageCaption={data.imageCaption}
            >
              <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6 mb-6">
                <p className="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mb-4">
                  {data.reason}
                </p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-3">
                    C√°c y·∫øu t·ªë ·∫£nh h∆∞·ªüng:
                  </h3>
                  <ul className="space-y-2 text-gray-700 dark:text-gray-300">
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>Tr√¨nh ƒë·ªô d√¢n tr√≠:</strong> ƒê·∫∑c bi·ªát ·ªü v√πng s√¢u, v√πng xa
                    </li>
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>ƒêi·ªÅu ki·ªán kinh t·∫ø:</strong> C√≤n kh√≥ khƒÉn, ch∆∞a ƒë·ªß c∆° s·ªü v·∫≠t ch·∫•t
                    </li>
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>Truy·ªÅn th·ªëng vƒÉn h√≥a:</strong> T√¥n gi√°o ƒë√£ ƒÉn s√¢u v√†o ƒë·ªùi s·ªëng
                    </li>
                  </ul>
                </div>

                <div>
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-3">
                    Quan ƒëi·ªÉm khoa h·ªçc:
                  </h3>
                  <ul className="space-y-2 text-gray-700 dark:text-gray-300">
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-green-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>√ù th·ª©c thay ƒë·ªïi ch·∫≠m:</strong> C·∫ßn th·ªùi gian d√†i ƒë·ªÉ thay ƒë·ªïi
                    </li>
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-green-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>Kh√¥ng th·ªÉ c∆∞·ª°ng √©p:</strong> Ph·∫£i d·ª±a v√†o s·ª± t·ª± gi√°c
                    </li>
                    <li className="flex items-start">
                      <span className="w-2 h-2 bg-green-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                      <strong>Gi·∫£i quy·∫øt t·ª´ g·ªëc:</strong> Thay ƒë·ªïi ƒëi·ªÅu ki·ªán sinh ho·∫°t
                    </li>
                  </ul>
                </div>
              </div>
            </ContentCard>
          </motion.div>

          {/* Policies Timeline */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mb-16"
          >
            <Timeline
              items={policyTimeline}
              title="Ch√≠nh s√°ch x·ª≠ l√Ω t√¥n gi√°o trong XHCN"
              delay={0.4}
            />
          </motion.div>

          {/* Policies Detail */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="mb-16"
          >
            <ContentCard
              title="Chi ti·∫øt c√°c ch√≠nh s√°ch"
              icon="üìã"
              pageId="socialism-policies-detail"
            >
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {data.policies.map((policy, index) => (
                  <motion.div
                    key={policy.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.6 + (index * 0.1) }}
                    className="bg-gray-50 dark:bg-gray-700 rounded-lg p-6"
                  >
                    <div className="flex items-start space-x-4">
                      <div className="text-2xl">{policy.icon}</div>
                      <div className="flex-1">
                        <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
                          {policy.text}
                        </h3>
                        <div className="text-sm text-gray-600 dark:text-gray-400">
                          Ch√≠nh s√°ch c∆° b·∫£n trong x·ª≠ l√Ω t√¥n gi√°o
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Implementation Methods */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="mb-16"
          >
            <ContentCard
              title="Ph∆∞∆°ng ph√°p th·ª±c hi·ªán"
              icon="‚öôÔ∏è"
              pageId="socialism-implementation"
            >
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {implementationMethods.map((method, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.8 + (index * 0.1) }}
                    className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm"
                  >
                    <div className="flex items-start space-x-4 mb-4">
                      <div className={`w-12 h-12 ${method.color} rounded-lg flex items-center justify-center flex-shrink-0`}>
                        <method.icon size={20} />
                      </div>
                      <div className="flex-1">
                        <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
                          {method.method}
                        </h3>
                        <p className="text-gray-700 dark:text-gray-300 text-sm">
                          {method.description}
                        </p>
                      </div>
                    </div>

                    <div className="space-y-2">
                      <h4 className="text-sm font-medium text-gray-900 dark:text-white">
                        C√°c bi·ªán ph√°p c·ª• th·ªÉ:
                      </h4>
                      <ul className="space-y-1">
                        {method.examples.map((example, exIndex) => (
                          <li key={exIndex} className="text-sm text-gray-600 dark:text-gray-400 flex items-start">
                            <span className="w-1.5 h-1.5 bg-gray-400 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                            {example}
                          </li>
                        ))}
                      </ul>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Example */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className="mb-16"
          >
            <ContentCard
              title="V√≠ d·ª• th·ª±c ti·ªÖn"
              icon="üåç"
              pageId="socialism-example"
            >
              <QuoteBox
                quote={data.example}
                variant="info"
              />

              <div className="mt-6 bg-gray-50 dark:bg-gray-700 rounded-lg p-6">
                <h4 className="font-semibold text-gray-900 dark:text-white mb-4">
                  B√†i h·ªçc kinh nghi·ªám:
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <h5 className="font-medium text-green-700 dark:text-green-300 mb-2">
                      ‚úÖ Th√†nh c√¥ng:
                    </h5>
                    <ul className="text-sm text-gray-700 dark:text-gray-300 space-y-1">
                      <li>‚Ä¢ Kh√¥ng c·∫•m tuy·ªát ƒë·ªëi ho·∫°t ƒë·ªông t√¥n gi√°o</li>
                      <li>‚Ä¢ Khuy·∫øn kh√≠ch ph√°t tri·ªÉn khoa h·ªçc</li>
                      <li>‚Ä¢ N√¢ng cao d√¢n tr√≠ m·ªôt c√°ch t·ª± nhi√™n</li>
                    </ul>
                  </div>
                  <div>
                    <h5 className="font-medium text-red-700 dark:text-red-300 mb-2">
                      ‚ö†Ô∏è C·∫ßn tr√°nh:
                    </h5>
                    <ul className="text-sm text-gray-700 dark:text-gray-300 space-y-1">
                      <li>‚Ä¢ D√πng b·∫°o l·ª±c ƒë·ªÉ c·∫•m t√¥n gi√°o</li>
                      <li>‚Ä¢ √Åp ƒë·∫∑t √Ω ch√≠ ch·ªß quan</li>
                      <li>‚Ä¢ B·ªè qua quy lu·∫≠t kh√°ch quan</li>
                    </ul>
                  </div>
                </div>
              </div>
            </ContentCard>
          </motion.div>

          {/* Challenges */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.0 }}
            className="mb-16"
          >
            <ContentCard
              title="Th√°ch th·ª©c v√† kh√≥ khƒÉn"
              icon="‚ö†Ô∏è"
              pageId="socialism-challenges"
            >
              <div className="space-y-6">
                {challenges.map((challenge, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.6, delay: 1.2 + (index * 0.1) }}
                    className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm"
                  >
                    <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
                      {challenge.challenge}
                    </h3>
                    <p className="text-gray-700 dark:text-gray-300 mb-3">
                      {challenge.description}
                    </p>
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded p-3">
                      <p className="text-sm text-blue-700 dark:text-blue-300">
                        <strong>Gi·∫£i ph√°p:</strong> {challenge.solution}
                      </p>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {(() => {
            try {
              const visited = JSON.parse(localStorage.getItem('visited-steps') || '[]');
              const totalSteps = 7;
              if (visited.length >= totalSteps && [...Array(totalSteps).keys()].every(i => visited.includes(i))) {
                return (
                  <motion.div
                    initial={{ opacity: 0, y: 30 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 1.2 }}
                    className="mb-16"
                  >
                    <Quiz
                      questions={socialismQuiz}
                      title="Quiz: T√¥n gi√°o trong x√£ h·ªôi ch·ªß nghƒ©a"
                    />
                  </motion.div>
                );
              }
            } catch { }
            return null;
          })()}

          {/* Note Taking Section */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.4 }}
            className="mb-16"
          >
            <NoteTaking
              pageId="socialism-religion"
              pageTitle="T√¥n gi√°o trong x√£ h·ªôi ch·ªß nghƒ©a"
            />
          </motion.div>

          {/* Next Steps */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.6 }}
            className="text-center"
          >
            <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-12 text-white">
              <h2 className="text-3xl font-bold mb-4">
                Ti·∫øp t·ª•c kh√°m ph√°
              </h2>
              <p className="text-xl mb-8 opacity-90">
                B√¢y gi·ªù h√£y t√¨m hi·ªÉu v·ªÅ ch√≠nh s√°ch t√¥n gi√°o c·ª• th·ªÉ c·ªßa Vi·ªát Nam
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="/vietnam-policy"
                  className="inline-flex items-center px-8 py-4 bg-white text-blue-600 font-semibold rounded-lg hover:bg-gray-100 transition-colors"
                >
                  <FiBookOpen className="mr-2" size={20} />
                  Ch√≠nh s√°ch Vi·ªát Nam
                </a>
                <a
                  href="/practical"
                  className="inline-flex items-center px-8 py-4 bg-transparent border-2 border-white text-white font-semibold rounded-lg hover:bg-white hover:text-blue-600 transition-colors"
                >
                  Th·ª±c ti·ªÖn Vi·ªát Nam
                </a>
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  );
};

export default SocialismReligion;
