import React from 'react';
import { motion } from 'framer-motion';
import ContentCard from '../components/Content/ContentCard';
import QuoteBox from '../components/Content/QuoteBox';
import Timeline from '../components/Content/Timeline';
import Quiz from '../components/Interactive/Quiz';
import NoteTaking from '../components/Interactive/NoteTaking';
import MainContentSidebar from '../components/Layout/MainContentSidebar';
import { contentData } from '../data/content';
import { quizData } from '../data/quiz';
import { FiTarget, FiUsers, FiBookOpen, FiShield, FiTrendingUp, FiCheckCircle } from 'react-icons/fi';

const Solutions = () => {
  const data = contentData.giaiPhap;

  // Filter quiz questions related to solutions
  const solutionsQuiz = quizData.filter(q =>
    q.question.includes('gi·∫£i ph√°p') ||
    q.question.includes('hi·ªán nay') ||
    q.question.includes('giai ƒëo·∫°n')
  );

  const solutionTimeline = [
    {
      title: "N√¢ng cao nh·∫≠n th·ª©c c·ªông ƒë·ªìng",
      description: "Gi√°o d·ª•c quy·ªÅn t·ª± do t√≠n ng∆∞·ª°ng, t√¥n tr·ªçng s·ª± kh√°c bi·ªát",
      date: "Giai ƒëo·∫°n 1 (2024-2025)",
      completed: false,
      details: [
        "Tuy√™n truy·ªÅn gi√° tr·ªã nh√¢n vƒÉn c·ªßa t√¥n gi√°o",
        "H·∫°n ch·∫ø m√™ t√≠n d·ªã ƒëoan",
        "N√¢ng cao hi·ªÉu bi·∫øt v·ªÅ ph√°p lu·∫≠t",
        "X√¢y d·ª±ng vƒÉn h√≥a t√¥n tr·ªçng s·ª± kh√°c bi·ªát"
      ],
      tags: ["Gi√°o d·ª•c", "Tuy√™n truy·ªÅn"]
    },
    {
      title: "Ho√†n thi·ªán ph√°p lu·∫≠t",
      description: "S·ª≠a ƒë·ªïi, b·ªï sung Lu·∫≠t T√≠n ng∆∞·ª°ng, T√¥n gi√°o ph√π h·ª£p v·ªõi b·ªëi c·∫£nh h·ªôi nh·∫≠p",
      date: "Giai ƒëo·∫°n 2 (2025-2026)",
      completed: false,
      details: [
        "S·ª≠a ƒë·ªïi Lu·∫≠t T√≠n ng∆∞·ª°ng, T√¥n gi√°o",
        "ƒê∆°n gi·∫£n h√≥a th·ªß t·ª•c ƒëƒÉng k√Ω",
        "C·∫≠p nh·∫≠t quy ƒë·ªãnh ph√π h·ª£p qu·ªëc t·∫ø",
        "TƒÉng c∆∞·ªùng t√≠nh minh b·∫°ch"
      ],
      tags: ["Ph√°p lu·∫≠t", "C·∫£i c√°ch"]
    },
    {
      title: "Ph√°t huy vai tr√≤ t√≠ch c·ª±c",
      description: "Khuy·∫øn kh√≠ch tham gia b·∫£o v·ªá m√¥i tr∆∞·ªùng, h·ªó tr·ª£ ng∆∞·ªùi ngh√®o",
      date: "Giai ƒëo·∫°n 3 (2026-2030)",
      completed: false,
      details: [
        "Tham gia b·∫£o v·ªá m√¥i tr∆∞·ªùng",
        "H·ªó tr·ª£ ph√°t tri·ªÉn gi√°o d·ª•c",
        "ChƒÉm s√≥c ng∆∞·ªùi ngh√®o, ng∆∞·ªùi khuy·∫øt t·∫≠t",
        "ƒê√†o t·∫°o ch·ª©c s·∫Øc am hi·ªÉu ph√°p lu·∫≠t"
      ],
      tags: ["Ph√°t tri·ªÉn", "X√£ h·ªôi"]
    },
    {
      title: "ƒê·∫•u tranh v·ªõi l·ª£i d·ª•ng",
      description: "X·ª≠ l√Ω nghi√™m c√°c h√†nh vi l·ª£i d·ª•ng t√¥n gi√°o ƒë·ªÉ ch·ªëng ph√° Nh√† n∆∞·ªõc",
      date: "Li√™n t·ª•c",
      completed: false,
      details: [
        "X·ª≠ l√Ω nghi√™m c√°c t·ªï ch·ª©c ph·∫£n ƒë·ªông",
        "N√¢ng cao c·∫£nh gi√°c c·ªông ƒë·ªìng",
        "TƒÉng c∆∞·ªùng gi√°m s√°t ho·∫°t ƒë·ªông",
        "B·∫£o v·ªá an ninh qu·ªëc gia"
      ],
      tags: ["An ninh", "ƒê·∫•u tranh"]
    }
  ];

  const implementationStrategies = [
    {
      strategy: "Chi·∫øn l∆∞·ª£c gi√°o d·ª•c",
      description: "T·∫≠p trung v√†o vi·ªác n√¢ng cao nh·∫≠n th·ª©c v√† hi·ªÉu bi·∫øt",
      methods: [
        "T·ªï ch·ª©c c√°c kh√≥a h·ªçc v·ªÅ quy·ªÅn t·ª± do t√≠n ng∆∞·ª°ng",
        "Tuy√™n truy·ªÅn qua c√°c ph∆∞∆°ng ti·ªán truy·ªÅn th√¥ng",
        "T√≠ch h·ª£p v√†o ch∆∞∆°ng tr√¨nh gi√°o d·ª•c ph·ªï th√¥ng",
        "ƒê√†o t·∫°o c√°n b·ªô l√†m c√¥ng t√°c t√¥n gi√°o"
      ],
      timeline: "2024-2025",
      priority: "Cao"
    },
    {
      strategy: "Chi·∫øn l∆∞·ª£c ph√°p l√Ω",
      description: "Ho√†n thi·ªán khung ph√°p l√Ω v√† c∆° ch·∫ø th·ª±c thi",
      methods: [
        "R√† so√°t v√† s·ª≠a ƒë·ªïi c√°c vƒÉn b·∫£n ph√°p lu·∫≠t",
        "X√¢y d·ª±ng h∆∞·ªõng d·∫´n thi h√†nh chi ti·∫øt",
        "TƒÉng c∆∞·ªùng nƒÉng l·ª±c th·ª±c thi ph√°p lu·∫≠t",
        "Thi·∫øt l·∫≠p c∆° ch·∫ø gi√°m s√°t v√† ƒë√°nh gi√°"
      ],
      timeline: "2025-2026",
      priority: "Cao"
    },
    {
      strategy: "Chi·∫øn l∆∞·ª£c ph√°t tri·ªÉn",
      description: "Ph√°t huy vai tr√≤ t√≠ch c·ª±c c·ªßa t√¥n gi√°o trong x√£ h·ªôi",
      methods: [
        "Khuy·∫øn kh√≠ch tham gia ho·∫°t ƒë·ªông x√£ h·ªôi",
        "H·ªó tr·ª£ ph√°t tri·ªÉn c√°c d·ª± √°n c·ªông ƒë·ªìng",
        "T·∫°o c∆° ch·∫ø h·ª£p t√°c gi·ªØa t√¥n gi√°o v√† nh√† n∆∞·ªõc",
        "ƒê·∫ßu t∆∞ ph√°t tri·ªÉn c∆° s·ªü h·∫° t·∫ßng"
      ],
      timeline: "2026-2030",
      priority: "Trung b√¨nh"
    },
    {
      strategy: "Chi·∫øn l∆∞·ª£c an ninh",
      description: "ƒê·∫£m b·∫£o an ninh qu·ªëc gia v√† ·ªïn ƒë·ªãnh x√£ h·ªôi",
      methods: [
        "TƒÉng c∆∞·ªùng gi√°m s√°t ho·∫°t ƒë·ªông t√¥n gi√°o",
        "X√¢y d·ª±ng h·ªá th·ªëng c·∫£nh b√°o s·ªõm",
        "ƒê√†o t·∫°o l·ª±c l∆∞·ª£ng chuy√™n tr√°ch",
        "H·ª£p t√°c qu·ªëc t·∫ø trong ƒë·∫•u tranh ch·ªëng kh·ªßng b·ªë"
      ],
      timeline: "Li√™n t·ª•c",
      priority: "Cao"
    }
  ];

  const successIndicators = [
    {
      indicator: "M·ª©c ƒë·ªô h√†i l√≤ng c·ªßa t√≠n ƒë·ªì",
      target: "‚â• 85%",
      current: "78%",
      trend: "TƒÉng",
      color: "text-green-600"
    },
    {
      indicator: "S·ªë v·ª• vi ph·∫°m ph√°p lu·∫≠t v·ªÅ t√¥n gi√°o",
      target: "‚â§ 10 v·ª•/nƒÉm",
      current: "15 v·ª•/nƒÉm",
      trend: "Gi·∫£m",
      color: "text-red-600"
    },
    {
      indicator: "T·ª∑ l·ªá tham gia ho·∫°t ƒë·ªông x√£ h·ªôi",
      target: "‚â• 70%",
      current: "65%",
      trend: "TƒÉng",
      color: "text-blue-600"
    },
    {
      indicator: "M·ª©c ƒë·ªô hi·ªÉu bi·∫øt ph√°p lu·∫≠t",
      target: "‚â• 80%",
      current: "72%",
      trend: "TƒÉng",
      color: "text-purple-600"
    }
  ];

  const challenges = [
    {
      challenge: "S·ª± ƒëa d·∫°ng c·ªßa t√¥n gi√°o",
      description: "M·ªói t√¥n gi√°o c√≥ ƒë·∫∑c ƒëi·ªÉm v√† nhu c·∫ßu kh√°c nhau",
      impact: "Kh√≥ khƒÉn trong vi·ªác x√¢y d·ª±ng ch√≠nh s√°ch chung",
      solution: "X√¢y d·ª±ng khung chung nh∆∞ng c√≥ h∆∞·ªõng d·∫´n c·ª• th·ªÉ cho t·ª´ng t√¥n gi√°o"
    },
    {
      challenge: "√Åp l·ª±c t·ª´ b√™n ngo√†i",
      description: "M·ªôt s·ªë th·∫ø l·ª±c qu·ªëc t·∫ø can thi·ªáp v√†o v·∫•n ƒë·ªÅ t√¥n gi√°o",
      impact: "G√¢y kh√≥ khƒÉn trong qu·∫£n l√Ω v√† b·∫£o v·ªá ch·ªß quy·ªÅn",
      solution: "TƒÉng c∆∞·ªùng ƒë·ªëi tho·∫°i, gi·∫£i th√≠ch ch√≠nh s√°ch r√µ r√†ng"
    },
    {
      challenge: "C√¢n b·∫±ng gi·ªØa t·ª± do v√† qu·∫£n l√Ω",
      description: "V·ª´a ƒë·∫£m b·∫£o t·ª± do t√≠n ng∆∞·ª°ng v·ª´a qu·∫£n l√Ω ch·∫∑t ch·∫Ω",
      impact: "Kh√≥ khƒÉn trong vi·ªác x√°c ƒë·ªãnh ranh gi·ªõi",
      solution: "X√¢y d·ª±ng ti√™u ch√≠ r√µ r√†ng, minh b·∫°ch"
    },
    {
      challenge: "Ngu·ªìn l·ª±c h·∫°n ch·∫ø",
      description: "C·∫ßn ƒë·∫ßu t∆∞ l·ªõn cho gi√°o d·ª•c v√† ph√°t tri·ªÉn",
      impact: "Ch·∫≠m ti·∫øn ƒë·ªô th·ª±c hi·ªán c√°c gi·∫£i ph√°p",
      solution: "∆Øu ti√™n c√°c gi·∫£i ph√°p c√≥ hi·ªáu qu·∫£ cao, chi ph√≠ th·∫•p"
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex">
      {/* Fixed Sidebar */}
      <div className="hidden lg:block w-80 bg-white dark:bg-gray-800 shadow-lg fixed left-0 top-0 h-screen overflow-y-auto z-10">
        <div className="p-6 pb-20">
          <MainContentSidebar
            title="N·ªôi dung ch∆∞∆°ng"
            showProgress={false}
            showStats={false}
          />
        </div>
      </div>

      {/* Main Content Area */}
      <div className="flex-1 lg:ml-80">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          {/* Header */}
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center mb-12"
          >
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
              {data.title}
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
              C√°c gi·∫£i ph√°p c·ª• th·ªÉ ƒë·ªÉ x·ª≠ l√Ω v·∫•n ƒë·ªÅ t√¥n gi√°o trong giai ƒëo·∫°n hi·ªán nay,
              d·ª±a tr√™n quan ƒëi·ªÉm M√°c-L√™nin v√† th·ª±c ti·ªÖn Vi·ªát Nam
            </p>
          </motion.div>

          {/* Main Solutions */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="mb-16"
          >
            <ContentCard
              title="C√°c gi·∫£i ph√°p ch√≠nh"
              icon="üéØ"
              pageId="solutions-main"
              image={data.image}
              imageCaption={data.imageCaption}
            >
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {data.solutions.map((solution, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                    className={`${solution.color} dark:bg-opacity-20 rounded-lg p-6`}
                  >
                    <div className="flex items-start space-x-4 mb-4">
                      <div className="text-2xl">{solution.icon}</div>
                      <div className="flex-1">
                        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                          {solution.category}
                        </h3>
                      </div>
                    </div>

                    <div className="space-y-2">
                      {solution.items.map((item, itemIndex) => (
                        <div key={itemIndex} className="flex items-start">
                          <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                          <span className="text-sm text-gray-700 dark:text-gray-300">{item}</span>
                        </div>
                      ))}
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Implementation Timeline */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mb-16"
          >
            <Timeline
              items={solutionTimeline}
              title="L·ªô tr√¨nh th·ª±c hi·ªán"
              delay={0.4}
            />
          </motion.div>

          {/* Implementation Strategies */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="mb-16"
          >
            <ContentCard
              title="Chi·∫øn l∆∞·ª£c th·ª±c hi·ªán"
              icon="üìã"
              pageId="solutions-strategies"
            >
              <div className="space-y-6">
                {implementationStrategies.map((strategy, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.6 + (index * 0.1) }}
                    className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm"
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex-1">
                        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                          {strategy.strategy}
                        </h3>
                        <p className="text-gray-700 dark:text-gray-300 mb-3">
                          {strategy.description}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2 ml-4">
                        <span className={`text-xs px-2 py-1 rounded ${strategy.priority === 'Cao' ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300' :
                          strategy.priority === 'Trung b√¨nh' ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300' :
                            'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'
                          }`}>
                          {strategy.priority}
                        </span>
                        <span className="text-xs text-gray-500 dark:text-gray-400">
                          {strategy.timeline}
                        </span>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-medium text-gray-900 dark:text-white mb-2">
                        C√°c bi·ªán ph√°p c·ª• th·ªÉ:
                      </h4>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                        {strategy.methods.map((method, methodIndex) => (
                          <div key={methodIndex} className="flex items-start">
                            <span className="w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                            <span className="text-sm text-gray-700 dark:text-gray-300">{method}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Success Indicators */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="mb-16"
          >
            <ContentCard
              title="Ch·ªâ s·ªë ƒë√°nh gi√° th√†nh c√¥ng"
              icon="üìä"
              pageId="solutions-indicators"
            >
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {successIndicators.map((indicator, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 0.8 + (index * 0.1) }}
                    className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm"
                  >
                    <h3 className="font-semibold text-gray-900 dark:text-white mb-3">
                      {indicator.indicator}
                    </h3>

                    <div className="space-y-2">
                      <div className="flex justify-between items-center">
                        <span className="text-sm text-gray-600 dark:text-gray-400">M·ª•c ti√™u:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{indicator.target}</span>
                      </div>
                      <div className="flex justify-between items-center">
                        <span className="text-sm text-gray-600 dark:text-gray-400">Hi·ªán t·∫°i:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{indicator.current}</span>
                      </div>
                      <div className="flex justify-between items-center">
                        <span className="text-sm text-gray-600 dark:text-gray-400">Xu h∆∞·ªõng:</span>
                        <span className={`font-medium ${indicator.color}`}>
                          {indicator.trend}
                        </span>
                      </div>
                    </div>

                    <div className="mt-4">
                      <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full ${indicator.trend === 'TƒÉng' ? 'bg-green-500' : 'bg-red-500'
                            }`}
                          style={{
                            width: indicator.trend === 'TƒÉng' ? '75%' : '60%'
                          }}
                        ></div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Challenges */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className="mb-16"
          >
            <ContentCard
              title="Th√°ch th·ª©c v√† kh√≥ khƒÉn"
              icon="‚ö†Ô∏è"
              pageId="solutions-challenges"
            >
              <div className="space-y-6">
                {challenges.map((challenge, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: 1.0 + (index * 0.1) }}
                    className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm"
                  >
                    <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
                      {challenge.challenge}
                    </h3>
                    <p className="text-gray-700 dark:text-gray-300 mb-3">
                      {challenge.description}
                    </p>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="bg-red-50 dark:bg-red-900/20 rounded p-3">
                        <h4 className="text-sm font-medium text-red-800 dark:text-red-300 mb-1">
                          T√°c ƒë·ªông:
                        </h4>
                        <p className="text-sm text-red-700 dark:text-red-300">
                          {challenge.impact}
                        </p>
                      </div>
                      <div className="bg-green-50 dark:bg-green-900/20 rounded p-3">
                        <h4 className="text-sm font-medium text-green-800 dark:text-green-300 mb-1">
                          Gi·∫£i ph√°p:
                        </h4>
                        <p className="text-sm text-green-700 dark:text-green-300">
                          {challenge.solution}
                        </p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </ContentCard>
          </motion.div>

          {/* Key Quote */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.0 }}
            className="mb-16"
          >
            <QuoteBox
              quote="Vi·ªác x·ª≠ l√Ω v·∫•n ƒë·ªÅ t√¥n gi√°o c·∫ßn ƒë∆∞·ª£c th·ª±c hi·ªán m·ªôt c√°ch khoa h·ªçc, c√≥ h·ªá th·ªëng v√† ph√π h·ª£p v·ªõi ƒëi·ªÅu ki·ªán th·ª±c t·∫ø c·ªßa ƒë·∫•t n∆∞·ªõc."
              author="ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam"
              source="Ngh·ªã quy·∫øt v·ªÅ c√¥ng t√°c t√¥n gi√°o"
              variant="success"
            />
          </motion.div>

          {/* Quiz Section */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.2 }}
            className="mb-16"
          >
            <Quiz
              questions={solutionsQuiz}
              title="Quiz: Gi·∫£i ph√°p x·ª≠ l√Ω v·∫•n ƒë·ªÅ t√¥n gi√°o"
            />
          </motion.div>

          {/* Note Taking Section */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.4 }}
            className="mb-16"
          >
            <NoteTaking
              pageId="solutions"
              pageTitle="Gi·∫£i ph√°p x·ª≠ l√Ω v·∫•n ƒë·ªÅ t√¥n gi√°o"
            />
          </motion.div>

          {/* Next Steps */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.6 }}
            className="text-center"
          >
            <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-12 text-white">
              <h2 className="text-3xl font-bold mb-4">
                Ho√†n th√†nh h·ªçc t·∫≠p
              </h2>
              <p className="text-xl mb-8 opacity-90">
                B√¢y gi·ªù h√£y xem k·∫øt lu·∫≠n t·ªïng h·ª£p v·ªÅ m√¥n h·ªçc
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <a
                  href="/conclusion"
                  className="inline-flex items-center px-8 py-4 bg-white text-blue-600 font-semibold rounded-lg hover:bg-gray-100 transition-colors"
                >
                  <FiCheckCircle className="mr-2" size={20} />
                  Xem k·∫øt lu·∫≠n
                </a>
                <a
                  href="/"
                  className="inline-flex items-center px-8 py-4 bg-transparent border-2 border-white text-white font-semibold rounded-lg hover:bg-white hover:text-blue-600 transition-colors"
                >
                  V·ªÅ trang ch·ªß
                </a>
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  );
};

export default Solutions;
